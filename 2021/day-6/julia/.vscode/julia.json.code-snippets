{
	// Place your julia workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Advent of Code Output": {
		"scope": "julia",
		"prefix": "aoc-out",
		"body": [
			"println(\"Part 1\")",
			"println(\"  sample: \", part1(sample))",
			"# println(\"  input : \", part1(input))",
			"# println(\"Part 2\")",
			"# println(\"  sample: \", part2(sample))",
			"# println(\"  input : \", part2(input))",
		]
	},
	"Advent of Code Part Functions": {
		"scope": "julia",
		"prefix": "aoc-func",
		"body": [
			"part1(data) = $0",
			"# part2(data) = ",
		]
	},
	"Advent of Code Input": {
		"scope": "julia",
		"prefix": "aoc-in",
		"body": [
			"sample = readdlm(\"sample\", $1)$0",
			"# input = readdlm(\"input\")",
		]
	}
}